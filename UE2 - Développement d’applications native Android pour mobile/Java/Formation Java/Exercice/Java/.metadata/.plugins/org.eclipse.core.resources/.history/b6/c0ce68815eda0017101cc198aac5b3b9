package fr.banque;


public class Client {
	private String nom;
	private String prenom;
	private int age;
	private int numero;
	private Compte[] tabComptes;

	
	public Client() {
		this(-1, null, null, 0);
	}

	
	public Client(int unNumero, String unNom, String unPrenom, int unAge) {
		super();
		this.setNom(unNom);
		this.setPrenom(unPrenom);
		this.setAge(unAge);
		
		this.tabComptes = new Compte[5];
		this.setNumero(unNumero);
	}

	
	public int getAge() {
		return this.age;
	}

	public String getNom() {
		return this.nom;
	}

	public String getPrenom() {
		return this.prenom;
	}

	
	public void setAge(int unAge) {
		this.age = unAge;
	}

	
	public void setNom(String unNom) {
		this.nom = unNom;
	}

	
	public final void setNumero(int unNumero) {
		this.numero = unNumero;
	}

	
	public final int getNumero() {
		return this.numero;
	}

	
	public void setPrenom(String unPrenom) {
		this.prenom = unPrenom;
	}

	
	public Compte[] getComptes() {
		return this.tabComptes;
	}

	
	public Compte getCompte(int unNumero) {
		
		for (int i = 0; i < this.tabComptes.length; i++) {
		
			if (this.tabComptes[i] != null && this.tabComptes[i].getNumero() == unNumero) {
				
				return this.tabComptes[i];
			}
		}
		return null;
	}

	public void ajouterCompte(Compte unCompte) throws BanqueException {
		boolean ajoute = false;
	
		for (int i = 0; !ajoute && i < this.tabComptes.length; i++) {
	
			if (this.tabComptes[i] == null) {
				
				this.tabComptes[i] = unCompte;
				ajoute = true;
			}
		}

		if (!ajoute) {
			throw new BanqueException("Plus de place dans le tableau");
		}
	}

	@Override
	public String toString() {
		
		StringBuilder sb = new StringBuilder();
		sb.append(this.getClass().getName());
		sb.append(" Nom: ");
		sb.append(this.getNom());
		sb.append(" Prenom: ");
		sb.append(this.getPrenom());
		sb.append(" Age: ");
		sb.append(this.getAge());
		sb.append("\n");
		for (int i = 0; i < this.tabComptes.length; i++) {
			if (this.tabComptes[i] != null) {
				sb.append(this.tabComptes[i]);
				sb.append("\n");
			}
		}
		return sb.toString();
	}

	
	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}
		if (obj == this) {
			return true;
		}
		if (obj instanceof Client) {
			Client c = (Client) obj;
			return this.getNumero() == c.getNumero();
		}
		return false;
	}

	@Override
	public int hashCode() {
		return (this.getClass().getName() + "_" + this.getNumero()).hashCode();
	}
}